(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{342:function(t,s,a){"use strict";a.r(s);var n=a(10),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"正则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#正则"}},[t._v("#")]),t._v(" 正则")]),t._v(" "),s("p",[t._v("用来处理字符串的规则")]),t._v(" "),s("ul",[s("li",[t._v("只能处理字符串")]),t._v(" "),s("li",[t._v("他是一个规则：可以验证字符串是否符合某些规则（test），也可以吧字符串中符合规则的内容捕捉到（exec/match）")])]),t._v(" "),s("div",{staticClass:"language-JavaScript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"good good study, day day up!"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" reg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("\\d+")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nreg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nstr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2021-07-25"')]),t._v("\nreg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["2021", index: 0, input: "2021-07-25", groups: undefined]')]),t._v("\n")])])]),s("h2",{attrs:{id:"编写正则表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编写正则表达式"}},[t._v("#")]),t._v(" 编写正则表达式")]),t._v(" "),s("p",[t._v("创建方式有两种")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 自变量方式常见（两个斜杠之间抱起来，描述规则的元字符）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" reg1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("\\d+")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 构造函数模式创建 参数（元字符字符串，修饰符字符串）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" reg2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\\\d+"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("正则表达式由两部分组成")]),t._v(" "),s("ul",[s("li",[t._v("元字符")]),t._v(" "),s("li",[t._v("修饰符")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("/* 常用元字符 */\n# 1. 量词元字符 设置出现的次数\n*       // 零到多次\n+       // 一到多次\n?       // 零次或者一次\n{n}     // 出现n次\n{n,}    // 出现n到多次\n{n,m}   // 出现n到m次\n\n# 2. 特殊元字符 单个或者组合再一起代表特殊的含义\n\\       // 转义字符\n.       // 除\\n(换行符)意外的任意字符\n^       // 以哪一个元字符作为开始\n$       // 以哪一个元字符作为结束\n\\n      // 换行符\n\\d      // 0-9 之间的一个数字\n\\D      // 非0-9之间的一个数字（大写和小写的意思相反）\n\\w      // 数字、字符、下划线中任意一个字符\n\\s      // 一个空白字符(包含空格、制表符、换页符等)\n\\t      // 一个制表符（一个TAB键：四个空格）\n\\b      // 匹配一个单词的边界\nx|y     // x或y中的一个字符\n[xyz]   // xyz中的一个字符\n[^]     // 除了xy以外的任意字符\n[a-z]   // 指定a-z这个范围中的任意字符 [0-9a-zA-Z_]===\\w\n[^a-z]  // 除了a-\n()      // 正则中的分组符号\n(?:)    // 只匹配不捕获\n(?=)    // 正向预查\n(?!)    // 负向预查\n\n# 3. 普通元字符：代表本身含义的\n/rain/  // 此正则匹配的是rain\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("/* 正则表达式常用的修饰符 */\ni       // 忽略大小写匹配\nm       // 进行多次匹配\ng       // 全局匹配\n")])])]),s("h2",{attrs:{id:"常用正则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用正则"}},[t._v("#")]),t._v(" 常用正则")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("/^"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("d+$/    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 匹配是否是纯数字")]),t._v("\n")])])]),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("w"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("W"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("+?"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 匹配对象")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("测试用例:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("export default definePageConfig({\n   navigationBarTitleText: '反馈页',\n   enableShareAppMessage: true,\n   fixTitle: true\n});\n")])])])])])}),[],!1,null,null,null);s.default=e.exports}}]);